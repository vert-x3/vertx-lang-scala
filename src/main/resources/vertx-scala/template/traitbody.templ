@comment{"# Generic asJava method"}
  def asJava: java.lang.Object\n\n

@comment{"# Trait methods"}
@foreach{method : instanceMethods}
@code{
  var future = shouldMethodReturnAFuture(method);
  var methodName = method.name;
  if(future) {
    if(methodName.endsWith('Handler'))
      methodName = methodName.substring(0, methodName.length-7);
    methodName += 'Future';
  }
  methodName = escapeIfKeyword(methodName);
}
@if{includeMethod(method, instanceMethods)}
  @if{method.doc != null}@{methodDoc(method, '');}@end{}  
	def @{methodName}@includeNamed{'writeTypeParamsWithVariance';typeParams=method.typeParams}@{multiMethodParams(method);}: @{returnTypeOf(method);}\n\n
@end{}
@end{}
