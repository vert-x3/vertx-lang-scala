@code{
  def generateImports(type, importedTypes, methods) {
    var ret = new java.util.ArrayList();
    for(imported : importedTypes) {
      /*Don't import implementations*/
      if(!imported.name.contains(".impl.")) {
        if(imported.kind == CLASS_API || imported.kind == CLASS_DATA_OBJECT) {
          ret.add(imported.raw.translateName("scala"));
          ret.add(convertTypeToAliasedType(imported));
        }
        else if(imported.kind == CLASS_JSON_OBJECT ||
        				imported.kind == CLASS_JSON_ARRAY ||
        				imported.kind == CLASS_ENUM) {
          ret.add(imported.raw);
        }
      }
    }
    ret.remove(type.raw.translateName("scala"));
    return ret;
  }

  /**
   * Every usage of a Vert.x-Java-type has to be aliased. This takes care of generating the required snipped.
   */
  def convertTypeToAliasedType(type) {
    type.name.replace(type.simpleName,"")+'{'+type.simpleName+" => J"+type.simpleName+"}"
  }
}
