@foreach{property:properties}
@if{property.doc != null}
\n
  /**\n
@{renderDoc("    *", property.doc, renderDocLink)}
    */\n
@end{}
@if{property.adder}
	@if{property.isMap}
  def @{property.adderMethod}(key: St@ring, value: @{toScalaType(property.type)}):@{typeName}\n
	@else{}
  def @{property.adderMethod}(value: @{toScalaType(property.type)}):@{typeName}\n
	@end{}
@end{}
@if{property.setter}
	@if{property.isList}
  def @{property.setterMethod}(value: scala.collection.mutable.Buffer[@{toScalaType(property.type)}]):@{typeName}\n
	@else{property.isSet}
  def @{property.setterMethod}(value: Set[@{toScalaType(property.type)}]):@{typeName}\n
	@else{property.isMap}
  def @{property.setterMethod}(value: Map[String, @{toScalaType(property.type)}]):@{typeName}\n
	@else{}
  def @{property.setterMethod}(value: @{toScalaType(property.type)}):@{typeName}\n
	@end{}
@end{}
@end{}
}\n
\n
