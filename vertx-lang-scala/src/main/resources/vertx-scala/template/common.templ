@code{
  def writeTypeParamsWithVariance(typeParams) {
    var ret = "";
    var first = true;
    if(typeParams.size > 0) {
      ret += '[';
    }
    for(t : typeParams) {
      if(!first) {
        ret += ", ";
      }
      else {
        first = false;
      }
      ret += t.name;
    }
    if(typeParams.size > 0) {
          ret += ']';
        }
    return ret;
  }

  def writeType(type) {
    return helper.getSimpleName(type.raw.name)+(writeTypeParamsWithVariance(typeParams));
  }

  def writeImplType(type) {
    return helper.getSimpleName(type.raw.name)+"Impl"+(writeTypeParamsWithVariance(typeParams));
  }

  def writeDelegateType(type) {
    return 'J'+type.raw.simpleName+(writeTypeParamsWithVariance(typeParams));
  }

}
